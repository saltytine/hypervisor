# armv8-baremetal-demo-rust

armv8 bare metal program written in rust.

## ~/.cargo/config
```shell
[target.aarch64-unknown-linux-gnu]
linker = "aarch64-linux-gnu-gcc"
rustflags = ["-C", "link-args=-nostartfiles -Tlinker.ld"]
```
you'll need to install linker: `apt-get install aarch64-linux-gnu-`
install the rust toolchain: `rustup install nightly && rustup default nightly && rustup target add aarch64-unknown-linux-gnu`

## compile
```shell
cargo clean && cargo build [--realease]
```
then copy to the target armv8 machine for execution

## Qemu
qemu-system-aarch64 \
-M virt \
-m 1024M \
-cpu cortex-a53 \
-nographic \
-kernel target/aarch64-unknown-linux-gnu/debug/armv8-baremetal-demo-rust

## Compile GDB for aarch64
1. Download gdb source: https://ftp.gnu.org/gnu/gdb/
2. tar -xzvf xxx
3. mkdir build
4. cd $_
5. ../configure --prefix=$PWD --host=aarch64-linux-gnu
6. make -j$(nproc) CFALGS=-static CXXFLAGS=-static
